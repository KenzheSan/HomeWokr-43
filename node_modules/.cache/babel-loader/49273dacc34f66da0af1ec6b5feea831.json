{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\login_page\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // функция для модальных акаунтов\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    // Через лифтин ап приходят данные\n    setIsLoggedIn(true); // как прийдут данные меняем значение на true\n  };\n\n  const logoutHandler = () => {\n    // функция для закрытий и изменения значения\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [\"//\", /*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/login_page/src/App.js"],"names":["React","useState","Login","Home","MainHeader","App","isLoggedIn","setIsLoggedIn","loginHandler","email","password","logoutHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C,CADa,CACuC;;AAEpD,QAAMO,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACA;AACA;AACAH,IAAAA,aAAa,CAAC,IAAD,CAAb,CAJwC,CAInB;AACtB,GALD;;AAOA,QAAMI,aAAa,GAAG,MAAM;AAAE;AAC5BJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAKA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,kCAEE,QAAC,UAAD;AAAY,MAAA,eAAe,EAAED,UAA7B;AAAyC,MAAA,QAAQ,EAAEK;AAAnD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iBACG,CAACL,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGF,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEK;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAzBQN,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);// функция для модальных акаунтов\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    // Через лифтин ап приходят данные\n    setIsLoggedIn(true); // как прийдут данные меняем значение на true\n  };\n\n  const logoutHandler = () => { // функция для закрытий и изменения значения\n    setIsLoggedIn(false);\n  };\n\n\n  return (\n    <React.Fragment>\n      //{}\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} /> \n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}